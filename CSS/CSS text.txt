- 글꼴 정하기

font-family
선택자{
  font-family: 글꼴이름1, 글꼴이름2, …, 글꼴이름n;
}

웹 폰트
웹 이용자의 컴퓨터 시스템에 폰트가 설치되어 있지 않은 경우에도 웹 서버로부터 이를 제공받아 사용할 수 있는 ‘웹 전용 글꼴’
문서에 웹 폰트를 적용하는 방법으로는 웹 사이트 제작 시 글꼴 파일을 문서와 함께 포함시키는 방법 또는 웹 서버에 저장된 글꼴의 주소를 웹 문서에 연결하는 방법을 사용할 수 있는데, 
글꼴 파일은 대개 파일 크기가 큰 편이므로 글꼴의 주소를 문서에 연결하는 방법이 좀 더 효율적인 방법입니다. 웹 폰트를 문서에 연결시키기 위해서는 스타일시트에 웹 폰트 관련 소스를 입력해야 하는데, 여기에서는 대표적인 웹 폰트 소스 검색 사이트인 '구글 폰트 사이트'의 사용법을 함께 살펴보겠습니다.

구글 폰트 사이트 이용하기
구글 폰트 사이트에는 구글 서버에서 제공하는 여러 종류의 웹 폰트가 소개되어 있습니다. 여기에는 다양한 언어를 지원하는 여러 종류의 글꼴이 존재하는데, 여기에서 제공되는 글꼴들은 무료로 사용할 수 있는 것은 물론 개인 웹사이트에서의 사용 또한 가능합니다.
https://fonts.google.com/
  <style>
    @import url(
      'https://fonts.googleapis.com/css2?family=Nanum+Myeongjo&display=swap'
    );

     /* id가 nm인 p 요소에만 적용합니다! */
    p#nm{ font-family: 'Nanum Myeongjo'; }
  </style>

- 텍스트 꾸미기
font-size
px : 화면을 구성하는 단위인 화소(픽셀)를 뜻하는 절대 단위입니다.
pt : 포인트라고 하며, 일반 문서에서 많이 사용하는 절대 단위입니다.
% : 부모 요소의 글자 크기를 백분율로 계산해 적용하는 상대 단위입니다.
em : 부모 요소의 글자 크기를 배수로 계산해 적용하는 상대 단위입니다.
rem : 루트 요소의 글자 크기를 배수로 계산해 적용하는 상대 단위입니다.
+ 루트 요소(root element)란 문서의 시작 부분을 뜻하는 것으로, 일반적으로 <html> 태그를 뜻합니다.
<p> 태그의 글자 크기 기본값은 16px로, 글자 크기를 따로 지정하지 않을 경우 모든 <p> 태그의 글자 크기는 16px을 유지합니다.

font-weight
100 ~ 900 : 글자 두께를 100단위로 조절할 수 있는 수치로, 단위는 사용하지 않습니다.
normal : 각 글꼴의 기본 두께를 뜻하며, 400을 지정한 것과 같습니다.
bold : 글자를 두껍게 표시합니다. 700을 지정한 것과 같습니다.
lighter : 부모 요소의 글자보다 얇게 표시합니다.
bolder : 부모 요소의 글자보다 두껍게 표시합니다.

font-style
normal : 기본값으로, 글자를 일반적인 형태로 표시합니다.
italic : 글자를 이탤릭체로 표시합니다.
oblique : 글자를 기울여서 표시합니다.

line-height
절대 단위 : px나 pt 등의 절대 단위를 이용해 행의 높이를 지정합니다.
상대 단위 : %나 em 등의 상대 단위를 이용해 행의 높이를 지정합니다. 이때 기준이 되는 값은 부모 요소가 아닌 태그 자신의 글자 크기입니다.
수치 적용 : 태그 자신의 글자 크기의 배수를 적용합니다. 예를 들어 태그의 font-size가 18px인 경우, 1.5를 적용하면 행 높이는 27px이 됩니다.

text-align
left : 문단 내 텍스트를 왼쪽 정렬합니다.
right : 문단 내 텍스트를 오른쪽 정렬합니다.
center : 문단 내 텍스트를 가운데 정렬합니다.
justify : 문단의 양 끝에 맞추어 양끝 정렬합니다.

text-decoration
none : 기본 값으로, 텍스트에 줄을 표시하지 않습니다.
underline : 텍스트에 밑줄을 표시합니다.
overline : 텍스트에 윗줄을 표시합니다.
line-through : 텍스트 정중앙에 취소선을 표시합니다.

- 색 정하기

color

영어 단어 : 색상을 나타내는 영어 단어를 입력합니다.

rgb 함수 : rgb 함수에 수치를 입력해 색상을 결정합니다.
/* rgb 함수 사용법 * red, green, blue: 0~255/
rgb(값1, 값2, 값3)
/* rgba 함수 사용법 * a: 투명도, 0~1/
rgba(값1, 값2, 값3, 값4)

hsl 함수 : hsl 함수에 수치를 입력해 색상을 결정합니다.
/* hsl 함수 사용법 * hue(색조): 0~360, saturation(채도), 조도(lightness): 0~100%/
hsl(값1, 값2, 값3)
/* hsla 함수 사용법 */
hsla(값1, 값2, 값3, 값4)

16진수 값 : 빨강, 초록, 파랑의 비율을 16진수로 표현해 색상을 결정합니다.
0~9, a~f -> 00~ff

opacity
색상과 무관하게 요소의 투명도만을 지정할 때 사용하는 속성으로, 0부터 1까지의 값을 지정해 투명도를 결정할 수 있습니다.
opacity 속성은 요소 전체의 투명도에 영향을 줍니다.

- 요소 배치

float
선택된 요소가 문서의 흐름에서 제외되어 부모 요소의 왼쪽 또는 오른쪽 면에 붙는 형태로 배치되도록 하는 특징을 가지고 있습니다.
부동 요소는 위치를 이동하면서 다른 요소의 공간에까지 영향을 줍니다
+속성
none : 기본값으로, 요소를 일반적인 문서의 흐름에 맞게 배치합니다.
left : 요소를 부모 요소의 왼쪽에 배치합니다.
right : 요소를 부모 요소의 오른쪽에 배치합니다.

clear
clear 속성은 문서에 부동 요소가 있는 경우 부동 요소 이후에 오는 요소가 부동 요소와 공간을 함께 사용할지, 또는 부동 요소로부터 받는 영향을 해제할지 결정할 수 있는 속성
+속성
both : 부동 요소의 left와 right 양 쪽의 영향을 모두 해제합니다.
left : 부동 요소의 left로부터 받는 영향을 해제합니다.
right : 부동 요소의 right로부터 받는 영향을 해제합니다.

position
요소의 위치를 어떤 방식으로 결정할 것인지를 지정하는 속성
top : 박스의 윗면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다.
bottom : 박스의 아랫면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다.
left : 박스의 왼쪽 면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다.
right : 박스의 오른쪽 면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다
+속성
static : 기본값으로, 요소를 일반적인 문서의 흐름에 맞게 배치합니다.

relative : 문서의 흐름에 맞춰 배치된 자리를 기준으로 요소를 이동시킵니다.

absolute : position이 지정된 상위 요소를 기준으로 요소를 이동시킵니다. 이때 요소는 문서의 흐름에서 제외됩니다.
position이 지정된 상위 요소가 전혀 없는 경우에는 브라우저 화면을 기준으로 위치를 결정합니다.


fixed : 화면을 기준으로 요소의 위치를 고정합니다. 이때 요소는 문서의 흐름에서 제외됩니다.

겹치거나 넘치는 요소 다루기
경우에 따라 서로 다른 요소들이 같은 공간 위에서 겹치게 되는 현상이 발생하기도 하는데, 겹침 현상은 특히 position 속성을 이용해 요소의 위치를 변경한 경우에 자주 발생합니다.

겹친 요소 간의 순서를 제어하는 z-index
z축은 사용자가 웹 화면을 바라보는 방향과 동일합니다. 그리고 CSS의 z-index 속성은 요소의 z축 위에서의 순서를 제어하는 속성입니다.
z-index의 속성값으로는 정수를 지정합니다. 이때 주어진 정수는 같은 공간에 함께 쌓여 있는 요소들 간의 순서를 상대적으로 결정합니다. 이때 정수 값이 클수록 사용자 방향에 가깝습니다. 또한 z-index 속성은 position 속성이 기본값 외 다른 값으로 지정된 경우에만 적용 가능합니다.
z-index의 수치는 상대적이므로, 반드시 1부터 시작할 필요는 없습니다.
position이 지정된 요소에 z-index가 지정되지 않으면, 요소들은 z축 위에서 HTML에서 등장하는 순서대로 쌓이게 됩니다.

요소의 콘텐츠가 너무 클 때
요소의 크기가 정해져 있는 상태에서 내부 콘텐츠의 크기가 요소보다 커지는 상황이 발생하면, 콘텐츠가 요소의 영역 밖으로 벗어나 버리는 ‘넘침 현상’이 발생하기도 합니다. 이러한 문제를 해결하기 위해서는 overflow 속성을 사용해야 합니다.
넘침 현상이 발생한 요소를 대상으로 overflow를 사용하면 넘친 만큼의 요소를 감추거나 요소 내부에 스크롤바를 만들어 요소 바깥으로 벗어난 콘텐츠를 처리할 수 있습니다.
+속성
visible : 기본값으로, 영역을 벗어난 콘텐츠를 그대로 보여줍니다.
hidden : 영역을 벗어난 콘텐츠를 잘라내어 보이지 않게 합니다.
scroll : 영역을 벗어난 콘텐츠를 잘라내어 보이지 않게 하고, 잘려진 콘텐츠 진행 방향으로 스크롤을 만듭니다.
auto : 웹 브라우저의 설정 값을 따릅니다. 데스크톱 브라우저에서는 주로 scroll로 처리합니다.

overflow 속성은 단축 속성입니다. overflow 속성에는 요소의 너비에 해당하는 가로 방향과 높이에 해당하는 세로 방향에 대한 넘침 현상 처리를 각각 따로 지정하거나, 하나의 속성값으로 두 방향에 대한 처리를 동일하게 해줄 수도 있습니다. 또는 각 축에 해당하는 overflow-x, overflow-y 속성을 따로 제어할 수도 있습니다.



