- 요소 배치

float
선택된 요소가 문서의 흐름에서 제외되어 부모 요소의 왼쪽 또는 오른쪽 면에 붙는 형태로 배치되도록 하는 특징을 가지고 있습니다.
부동 요소는 위치를 이동하면서 다른 요소의 공간에까지 영향을 줍니다
+속성
none : 기본값으로, 요소를 일반적인 문서의 흐름에 맞게 배치합니다.
left : 요소를 부모 요소의 왼쪽에 배치합니다.
right : 요소를 부모 요소의 오른쪽에 배치합니다.

clear
clear 속성은 문서에 부동 요소가 있는 경우 부동 요소 이후에 오는 요소가 부동 요소와 공간을 함께 사용할지, 또는 부동 요소로부터 받는 영향을 해제할지 결정할 수 있는 속성
+속성
both : 부동 요소의 left와 right 양 쪽의 영향을 모두 해제합니다.
left : 부동 요소의 left로부터 받는 영향을 해제합니다.
right : 부동 요소의 right로부터 받는 영향을 해제합니다.

position
요소의 위치를 어떤 방식으로 결정할 것인지를 지정하는 속성
top : 박스의 윗면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다.
bottom : 박스의 아랫면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다.
left : 박스의 왼쪽 면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다.
right : 박스의 오른쪽 면을 기준으로 요소가 얼마만큼 이동할 것인지를 결정합니다
+속성
static : 기본값으로, 요소를 일반적인 문서의 흐름에 맞게 배치합니다.

relative : 문서의 흐름에 맞춰 배치된 자리를 기준으로 요소를 이동시킵니다.

absolute : position이 지정된 상위 요소를 기준으로 요소를 이동시킵니다. 이때 요소는 문서의 흐름에서 제외됩니다.
position이 지정된 상위 요소가 전혀 없는 경우에는 브라우저 화면을 기준으로 위치를 결정합니다.


fixed : 화면을 기준으로 요소의 위치를 고정합니다. 이때 요소는 문서의 흐름에서 제외됩니다.

겹치거나 넘치는 요소 다루기
경우에 따라 서로 다른 요소들이 같은 공간 위에서 겹치게 되는 현상이 발생하기도 하는데, 겹침 현상은 특히 position 속성을 이용해 요소의 위치를 변경한 경우에 자주 발생합니다.

겹친 요소 간의 순서를 제어하는 z-index
z축은 사용자가 웹 화면을 바라보는 방향과 동일합니다. 그리고 CSS의 z-index 속성은 요소의 z축 위에서의 순서를 제어하는 속성입니다.
z-index의 속성값으로는 정수를 지정합니다. 이때 주어진 정수는 같은 공간에 함께 쌓여 있는 요소들 간의 순서를 상대적으로 결정합니다. 이때 정수 값이 클수록 사용자 방향에 가깝습니다. 또한 z-index 속성은 position 속성이 기본값 외 다른 값으로 지정된 경우에만 적용 가능합니다.
z-index의 수치는 상대적이므로, 반드시 1부터 시작할 필요는 없습니다.
position이 지정된 요소에 z-index가 지정되지 않으면, 요소들은 z축 위에서 HTML에서 등장하는 순서대로 쌓이게 됩니다.

요소의 콘텐츠가 너무 클 때
요소의 크기가 정해져 있는 상태에서 내부 콘텐츠의 크기가 요소보다 커지는 상황이 발생하면, 콘텐츠가 요소의 영역 밖으로 벗어나 버리는 ‘넘침 현상’이 발생하기도 합니다. 이러한 문제를 해결하기 위해서는 overflow 속성을 사용해야 합니다.
넘침 현상이 발생한 요소를 대상으로 overflow를 사용하면 넘친 만큼의 요소를 감추거나 요소 내부에 스크롤바를 만들어 요소 바깥으로 벗어난 콘텐츠를 처리할 수 있습니다.
+속성
visible : 기본값으로, 영역을 벗어난 콘텐츠를 그대로 보여줍니다.
hidden : 영역을 벗어난 콘텐츠를 잘라내어 보이지 않게 합니다.
scroll : 영역을 벗어난 콘텐츠를 잘라내어 보이지 않게 하고, 잘려진 콘텐츠 진행 방향으로 스크롤을 만듭니다.
auto : 웹 브라우저의 설정 값을 따릅니다. 데스크톱 브라우저에서는 주로 scroll로 처리합니다.

overflow 속성은 단축 속성입니다. overflow 속성에는 요소의 너비에 해당하는 가로 방향과 높이에 해당하는 세로 방향에 대한 넘침 현상 처리를 각각 따로 지정하거나, 하나의 속성값으로 두 방향에 대한 처리를 동일하게 해줄 수도 있습니다. 또는 각 축에 해당하는 overflow-x, overflow-y 속성을 따로 제어할 수도 있습니다.